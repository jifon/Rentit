spring.datasource.url= jdbc:postgresql://localhost:5432/rentit
spring.datasource.username=postgres
spring.datasource.password=root

#logging.level.org.springframework = debug
#logging.level.tech.hardik = trace
#logging.level.org.springframework.boot.autoconfigure=ERROR

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

#OAuth
spring.security.oauth2.client.registration.google.client-id=473751588677-i67i67lteojk5c359goqc6f3i4t4iiri.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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

#spring.security.oauth2.client.registration.facebook.client-id=<your client id>
#spring.security.oauth2.client.registration.facebook.client-secret=<your client secret>

#Spring Mail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=renitt3test@gmail.com
spring.mail.password=nsbdicjdrswbpjhe
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# App Properties
rentit.app.jwtSecret= verygOodsecretkEEeeyverygOodsecretkEEeeyverygOodsecretkEEeeyverygOodsecretkEEeeyverygOodsecretkEEeey
rentit.app.jwtExpirationMs= 46400000
rentit.app.jwtRefreshExpirationMs= 86400000


# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/rentit.p12
# The password used to generate the certificate
server.ssl.key-store-password=rentit1234
# The alias mapped to the certificate
server.ssl.key-alias=rentit

server.ssl.enabled=true
#test
#rentit.app.jwtExpirationMs= 60000
#rentit.app.jwtRefreshExpirationMs= 120000
